@model SATApp.DATA.EF.Student

@{
    ViewBag.Title = "Edit Student";
}

<h2 class="text-center mt-5 mb-3">@ViewBag.Title</h2>


@using (Html.BeginForm("Edit", "Students", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-7  offset-3 edit-form">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StudentID)
        @Html.HiddenFor(x => x.PhotoURL)
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2 offset-1" })
            <div class="col-md-10 offset-1">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2 offset-1" })
            <div class="col-md-10 offset-1">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Major, htmlAttributes: new { @class = "control-label col-md-2 offset-1" })
            <div class="col-md-10 offset-1">
                @Html.EditorFor(model => model.Major, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Major, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2 offset-1" })
            <div class="col-md-10 offset-1">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2 offset-1" })
            <div class="col-md-10 offset-1">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2 offset-1" })
            <div class="col-md-10 offset-1">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2 offset-1" })
            <div class="col-md-10 offset-1">
                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2 offset-1" })
            <div class="col-md-10 offset-1">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 offset-1" })
            <div class="col-md-10 offset-1">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhotoURL, htmlAttributes: new { @class = "control-label col-md-2 offset-1" })
            <div class="col-md-10 offset-1">
                <img width="150" src="@Url.Content("~/Content/assets/img/" + Model.PhotoURL)" />
                <input type="file" style="display: inline;" name="PhotoURL" />



                @*@Html.EditorFor(model => model.PhotoURL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhotoURL, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SSID, "SSID", htmlAttributes: new { @class = "control-label col-md-2 offset-1" })
            <div class="col-md-10 offset-1">
                @Html.DropDownList("SSID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SSID, "", new { @class = "text-danger" })


            </div>
        </div>

        <div class="form-group offset-1">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary offset-2" />

                @Html.ActionLink("Exit", "Index", null, new { @class = "btn btn-danger offset-6", @style = "box-shadow: 2px 2px black;" })


            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
    $(document).ready(function () {
        $('html,body').animate({
            scrollTop: $("#main").offset().top
        }, 1000);
    });
    </script>
}
