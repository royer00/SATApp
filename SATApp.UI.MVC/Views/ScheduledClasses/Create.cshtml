@model SATApp.DATA.EF.ScheduledClass

@{
    ViewBag.Title = "Add a Scheduled Class";
}

<h2 class="text-center mt-5 mb-3">@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal form-style col-md-8 offset-2 mb-3">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group offset-1">
            @Html.LabelFor(model => model.CourseID, "CourseID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CourseID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group offset-1">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group offset-1">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group offset-1">
            @Html.LabelFor(model => model.InstructorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InstructorName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InstructorName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group offset-1">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group offset-1">
            @Html.LabelFor(model => model.SCSID, "SCSID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SCSID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SCSID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group offset-2">
            <div class="col-md-offset-2 col-md-12">
                <input type="submit" value="Add Class" class="btn btn-danger" />
                @Html.ActionLink("Exit", "Index", null, new { @class = "btn btn-primary offset-5" })
            </div>
        </div>
    </div>
}

<div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
    $(document).ready(function () {
        $('html,body').animate({
            scrollTop: $("#main").offset().top
        }, 1000);
    });
    </script>
}
